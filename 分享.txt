面试官：介绍下你网盘项目的分享功能
回答：
我项目的分享功能核心是 “生成临时分享链接 + 权限校验 + 过期自动失效”，支持用户将自己的文件分享给他人，同时保证分享过程的安全性和可控性，具体实现分客户端、服务器两部分，流程如下：
1. 客户端（发起分享操作）
首先用户在文件列表中右键点击目标文件，选择 “分享” 选项，客户端会弹出分享配置弹窗，让用户设置 “分享有效期”（比如 1 小时、24 小时、7 天，默认 24 小时）。
用户确认后，客户端收集分享所需的核心信息：当前登录用户的u_id（已存储在登录状态中）、目标文件的f_id（从本地m_mapFileNametoFileInfo中获取）、用户设置的expire_time（有效期，转换为时间戳格式），然后构造STRU_SHARE_FILE_RQ协议包，通过m_pKernel->sendData将分享请求发送给服务器。
同时客户端会在本地文件列表的该文件旁添加 “已分享” 标识（比如小图标），提示用户文件当前的分享状态。
2. 服务器（处理分享请求，生成分享码）
服务器网络模块收到分享请求包后，交由TCPKernel的dealShareFileReq函数处理：
第一步先做权限校验 —— 通过 SQL 查询user_file表（select * from user_file where u_id=%d and f_id=%d），确认发起分享的用户确实拥有该文件的权限，避免越权分享；
第二步生成唯一分享码 —— 用rand()结合时间戳（time(NULL)）生成 6 位或 8 位随机字符串（比如 “a3b7d9f2”），作为分享链接的核心标识，同时通过 Redis 缓存分享信息：以 “share: 分享码” 为键，值存储u_id（原分享者 ID）、f_id（文件 ID）、expire_time（过期时间戳），并设置 Redis 键的过期时间与用户设置的有效期一致（自动过期，无需手动清理）；
第三步构造响应包 —— 将生成的分享码（比如 “a3b7d9f2”）封装进STRU_SHARE_FILE_RS协议包，发送回客户端，客户端收到后弹窗显示 “分享成功，分享码：a3b7d9f2”，用户可将分享码告知接收者。
3. 接收者（通过分享码获取文件）
接收者在自己的网盘客户端点击 “领取分享文件”，输入分享码后，客户端会构造STRU_GET_SHARED_FILE_RQ协议包（包含输入的分享码）发送给服务器；
服务器收到后，先查询 Redis 缓存：用 “share: 分享码” 作为键，判断该分享是否存在且未过期 —— 若 Redis 中无该键（已过期或无效），则返回 “分享已失效”；若存在，则提取f_id和原分享者u_id，再通过 SQL 查询file表获取文件的f_name（文件名）、f_size（文件大小）等元数据，返回给接收者客户端；
接收者客户端弹窗显示 “分享文件：XXX.pdf（200KB）”，用户点击 “下载” 后，后续流程就和普通下载一致 —— 服务器按f_id读取文件，分块传输给接收者，完成文件领取。
4. 关键设计：保证分享安全与可控
自动过期：依赖 Redis 的键过期机制，分享码到期后自动失效，避免长期泄露；
权限隔离：接收者只能下载分享的文件，无法修改原分享者的文件，也看不到原分享者的其他文件；
缓存优化：用 Redis 缓存分享码而非频繁查数据库，减少 IO 开销，分享码查询响应时间从 100ms 降至 20ms 左右。
